#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 7.2 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 59 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Inconsolata\0"
0 17 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 90 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 90 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 90 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 90 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 200 0 0 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 0 -1 -1
          0 548 0 30 3 12 #"#lang racket"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 26 3 1 #" "
0 0 14 3 1 #"s"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 3 #"map"
0 0 26 3 2 #" ("
0 0 16 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 14 3 4 #"line"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 10 #"         ("
0 0 14 3 3 #"map"
0 0 26 3 2 #" ("
0 0 16 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 14 3 6 #"vector"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 17 #"                ("
0 0 14 3 4 #"cons"
0 0 26 3 2 #" ("
0 0 14 3 14 #"string->symbol"
0 0 26 3 2 #" ("
0 0 14 3 9 #"substring"
0 0 26 3 1 #" "
0 0 14 3 6 #"vector"
0 0 26 3 1 #" "
0 0 23 3 1 #"0"
0 0 26 3 1 #" "
0 0 23 3 1 #"1"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 23 #"                      ("
0 0 14 3 14 #"string->number"
0 0 26 3 2 #" ("
0 0 14 3 9 #"substring"
0 0 26 3 1 #" "
0 0 14 3 6 #"vector"
0 0 26 3 1 #" "
0 0 23 3 1 #"1"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 3 15 #"              ("
0 0 14 3 12 #"string-split"
0 0 26 3 1 #" "
0 0 14 3 4 #"line"
0 0 26 3 1 #" "
0 0 20 3 3 #"\",\""
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 8 #"       ("
0 0 14 3 12 #"string-split"
0 0 26 3 1 #" "
0 0 14 3 1 #"s"
0 0 26 3 1 #" "
0 0 20 3 3 #"\"\\n"
0 0 20 3 1 #"\""
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 1 #" "
0 0 14 3 8 #"example1"
0 0 26 3 1 #" "
0 10          42 23 2 #"(\0"
2 #")\0"
7 7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 5 #"parse"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 18 #"\"R8,U5,L5,D3\\nU7,R"
7 #"wxtext\0"
3 1 #"6"
7 #"wxtext\0"
3 7 #",D4,L4\""
7 #"wxtext\0"
3 1 #")"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 1 #" "
0 0 14 3 8 #"example2"
0 0 26 3 1 #" "
0 10         182 23 2 #"(\0"
2 #")\0"
35 7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 5 #"parse"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"\""
7 #"wxtext\0"
3 3 #"R75"
7 #"wxtext\0"
3 1 #","
7 #"wxtext\0"
3 2 #"D3"
7 #"wxtext\0"
3 1 #"0"
7 #"wxtext\0"
3 1 #","
7 #"wxtext\0"
3 3 #"R83"
7 #"wxtext\0"
3 1 #","
7 #"wxtext\0"
3 3 #"U83"
7 #"wxtext\0"
3 1 #","
7 #"wxtext\0"
3 3 #"L12"
7 #"wxtext\0"
3 1 #","
7 #"wxtext\0"
3 3 #"D49"
7 #"wxtext\0"
3 1 #","
7 #"wxtext\0"
3 3 #"R71"
7 #"wxtext\0"
3 1 #","
7 #"wxtext\0"
3 2 #"U7"
7 #"wxtext\0"
3 1 #","
7 #"wxtext\0"
3 8 #"L72\\nU62"
7 #"wxtext\0"
3 1 #","
7 #"wxtext\0"
3 3 #"R66"
7 #"wxtext\0"
3 1 #","
7 #"wxtext\0"
3 3 #"U55"
7 #"wxtext\0"
3 1 #","
7 #"wxtext\0"
3 3 #"R34"
7 #"wxtext\0"
3 1 #","
7 #"wxtext\0"
3 3 #"D71"
7 #"wxtext\0"
3 1 #","
7 #"wxtext\0"
3 3 #"R55"
7 #"wxtext\0"
3 1 #","
7 #"wxtext\0"
3 8 #"D58,R83\""
7 #"wxtext\0"
3 1 #")"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 1 #" "
0 0 14 3 8 #"example3"
0 0 26 3 1 #" "
0 10          47 23 2 #"(\0"
2 #")\0"
8 7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 5 #"parse"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"\""
7 #"wxtext\0"
3 16 #"R98,U47,R26,D63,"
7 #"wxtext\0"
3 1 #"R"
7 #"wxtext\0"
3 65
#"33,U87,L62,D20,R33,U53,R51\\nU98,R91,D20,R16,D67,R40,U7,R15,U6,R7\""
7 #"wxtext\0"
3 1 #")"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 3 #"def"
0 0 16 3 3 #"ine"
0 0 26 3 2 #" ("
0 0 14 3 19 #"segments-of-vectors"
0 0 26 3 1 #" "
0 0 14 3 7 #"vectors"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 2 #"de"
0 0 16 3 4 #"fine"
0 0 26 3 2 #" ("
0 0 14 3 5 #"inner"
0 0 26 3 1 #" "
0 0 14 3 7 #"vectors"
0 0 26 3 1 #" "
0 0 14 3 8 #"curr-pos"
0 0 26 3 1 #" "
0 0 14 3 9 #"verticals"
0 0 26 3 1 #" "
0 0 14 3 11 #"horizontals"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 4 #"    "
0 10        1442 23 2 #"(\0"
2 #")\0"
287 7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 1 #"i"
7 #"wxtext\0"
3 1 #"f"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"null?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 7 #"vectors"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 9 #"        ("
7 #"wxtext\0"
3 4 #"cons"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 9 #"verticals"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 11 #"horizontals"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 9 #"        ("
7 #"wxtext\0"
3 4 #"let*"
7 #"wxtext\0"
3 3 #" [("
7 #"wxtext\0"
3 6 #"vector"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 3 #"car"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 7 #"vectors"
7 #"wxtext\0"
3 2 #"))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 16 #"               ("
7 #"wxtext\0"
3 3 #"dir"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 3 #"car"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 6 #"vector"
7 #"wxtext\0"
3 2 #"))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 16 #"               ("
7 #"wxtext\0"
3 4 #"dist"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 3 #"cdr"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 6 #"vector"
7 #"wxtext\0"
3 3 #"))]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 11 #"          ("
7 #"wxtext\0"
3 4 #"cond"
7 #"wxtext\0"
3 3 #" [("
7 #"wxtext\0"
3 3 #"eq?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"R"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"dir"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 18 #"                 ("
7 #"wxtext\0"
3 3 #"let"
7 #"wxtext\0"
3 3 #" [("
7 #"wxtext\0"
3 7 #"new-pos"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"cons"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 1 #"+"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 3 #"car"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 8 #"curr-pos"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 4 #"dist"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 39 #"                                      ("
7 #"wxtext\0"
3 3 #"cdr"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 8 #"curr-pos"
7 #"wxtext\0"
3 4 #")))]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 20 #"                   ("
7 #"wxtext\0"
3 5 #"inner"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 3 #"cdr"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 7 #"vectors"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 26 #"                          "
7 #"wxtext\0"
3 7 #"new-pos"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 26 #"                          "
7 #"wxtext\0"
3 9 #"verticals"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 26 #"                          "
7 #"wxtext\0"
3 44 #"; TODO, abstractions for this data structure"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 27 #"                          ("
7 #"wxtext\0"
3 4 #"cons"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"cons"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 8 #"curr-pos"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 7 #"new-pos"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 11 #"horizontals"
7 #"wxtext\0"
3 4 #")))]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 18 #"                [("
7 #"wxtext\0"
3 3 #"eq?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"L"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"dir"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 18 #"                 ("
7 #"wxtext\0"
3 3 #"let"
7 #"wxtext\0"
3 3 #" [("
7 #"wxtext\0"
3 7 #"new-pos"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"cons"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 1 #"-"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 3 #"car"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 8 #"curr-pos"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 4 #"dist"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 39 #"                                      ("
7 #"wxtext\0"
3 3 #"cdr"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 8 #"curr-pos"
7 #"wxtext\0"
3 4 #")))]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 20 #"                   ("
7 #"wxtext\0"
3 5 #"inner"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 3 #"cdr"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 7 #"vectors"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 26 #"                          "
7 #"wxtext\0"
3 7 #"new-pos"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 26 #"                          "
7 #"wxtext\0"
3 9 #"verticals"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 27 #"                          ("
7 #"wxtext\0"
3 4 #"cons"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"cons"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 8 #"curr-pos"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 7 #"new-pos"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 11 #"horizontals"
7 #"wxtext\0"
3 4 #")))]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 18 #"                [("
7 #"wxtext\0"
3 3 #"eq?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"D"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"dir"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 18 #"                 ("
7 #"wxtext\0"
3 3 #"let"
7 #"wxtext\0"
3 3 #" [("
7 #"wxtext\0"
3 7 #"new-pos"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"cons"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 3 #"car"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 8 #"curr-pos"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 39 #"                                      ("
7 #"wxtext\0"
3 1 #"-"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 3 #"cdr"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 8 #"curr-pos"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 4 #"dist"
7 #"wxtext\0"
3 4 #")))]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 20 #"                   ("
7 #"wxtext\0"
3 5 #"inner"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 3 #"cdr"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 7 #"vectors"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 26 #"                          "
7 #"wxtext\0"
3 7 #"new-pos"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 27 #"                          ("
7 #"wxtext\0"
3 4 #"cons"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"cons"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 8 #"curr-pos"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 7 #"new-pos"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 9 #"verticals"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 26 #"                          "
7 #"wxtext\0"
3 11 #"horizontals"
7 #"wxtext\0"
3 3 #"))]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 18 #"                [("
7 #"wxtext\0"
3 3 #"eq?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"U"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"dir"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 18 #"                 ("
7 #"wxtext\0"
3 3 #"let"
7 #"wxtext\0"
3 3 #" [("
7 #"wxtext\0"
3 7 #"new-pos"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"cons"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 3 #"car"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 8 #"curr-pos"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 39 #"                                      ("
7 #"wxtext\0"
3 1 #"+"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 3 #"cdr"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 8 #"curr-pos"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 4 #"dist"
7 #"wxtext\0"
3 4 #")))]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 20 #"                   ("
7 #"wxtext\0"
3 5 #"inner"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 3 #"cdr"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 7 #"vectors"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 26 #"                          "
7 #"wxtext\0"
3 7 #"new-pos"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 27 #"                          ("
7 #"wxtext\0"
3 4 #"cons"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"cons"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 8 #"curr-pos"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 7 #"new-pos"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 9 #"verticals"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 26 #"                          "
7 #"wxtext\0"
3 11 #"horizontals"
7 #"wxtext\0"
3 3 #"))]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 17 #"                ["
7 #"wxtext\0"
3 4 #"else"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"error"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 17 #"\"Unknown dir -- \""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"dir"
7 #"wxtext\0"
3 5 #")])))"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 5 #"inner"
0 0 26 3 1 #" "
0 0 14 3 7 #"vectors"
0 0 26 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 26 3 1 #" "
0 0 23 3 1 #"0"
0 0 26 3 1 #" "
0 0 23 3 1 #"0"
0 0 26 3 2 #") "
0 0 23 3 1 #"'"
0 0 26 3 3 #"() "
0 0 23 3 1 #"'"
0 0 26 3 4 #"()))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 12 #"intersection"
0 0 26 3 1 #" "
0 0 14 3 5 #"horiz"
0 0 26 3 1 #" "
0 0 14 3 4 #"vert"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 7 #"between"
0 0 26 3 1 #" "
0 0 14 3 1 #"p"
0 0 26 3 1 #" "
0 0 14 3 1 #"a"
0 0 26 3 1 #" "
0 0 14 3 1 #"b"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 14 3 2 #"or"
0 0 26 3 2 #" ("
0 0 14 3 3 #"and"
0 0 26 3 2 #" ("
0 0 14 3 1 #">"
0 0 26 3 1 #" "
0 0 14 3 1 #"p"
0 0 26 3 1 #" "
0 0 14 3 1 #"a"
0 0 26 3 3 #") ("
0 0 14 3 1 #">"
0 0 26 3 1 #" "
0 0 14 3 1 #"b"
0 0 26 3 1 #" "
0 0 14 3 1 #"p"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 9 #"        ("
0 0 14 3 3 #"and"
0 0 26 3 2 #" ("
0 0 14 3 1 #"<"
0 0 26 3 1 #" "
0 0 14 3 1 #"p"
0 0 26 3 1 #" "
0 0 14 3 1 #"a"
0 0 26 3 3 #") ("
0 0 14 3 1 #"<"
0 0 26 3 1 #" "
0 0 14 3 1 #"b"
0 0 26 3 1 #" "
0 0 14 3 1 #"p"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 3 #"let"
0 0 26 3 3 #" [("
0 0 14 3 9 #"x-of-vert"
0 0 26 3 2 #" ("
0 0 14 3 4 #"caar"
0 0 26 3 1 #" "
0 0 14 3 4 #"vert"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 9 #"        ("
0 0 14 3 10 #"y-of-horiz"
0 0 26 3 2 #" ("
0 0 14 3 4 #"cdar"
0 0 26 3 1 #" "
0 0 14 3 5 #"horiz"
0 0 26 3 3 #"))]"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 26 3 2 #" ("
0 0 14 3 3 #"and"
0 0 26 3 2 #" ("
0 0 14 3 7 #"between"
0 0 26 3 1 #" "
0 0 14 3 9 #"x-of-vert"
0 0 26 3 2 #" ("
0 0 14 3 4 #"caar"
0 0 26 3 1 #" "
0 0 14 3 5 #"horiz"
0 0 26 3 3 #") ("
0 0 14 3 4 #"cadr"
0 0 26 3 1 #" "
0 0 14 3 5 #"horiz"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 14 #"             ("
0 0 14 3 7 #"between"
0 0 26 3 1 #" "
0 0 14 3 10 #"y-of-horiz"
0 0 26 3 2 #" ("
0 0 14 3 4 #"cdar"
0 0 26 3 1 #" "
0 0 14 3 4 #"vert"
0 0 26 3 3 #") ("
0 0 14 3 4 #"cddr"
0 0 26 3 1 #" "
0 0 14 3 4 #"vert"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 9 #"        ("
0 0 14 3 4 #"cons"
0 0 26 3 1 #" "
0 0 14 3 9 #"x-of-vert"
0 0 26 3 1 #" "
0 0 14 3 10 #"y-of-horiz"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 8 #"        "
0 0 23 3 2 #"#f"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 18 #"wire-intersections"
0 0 26 3 1 #" "
0 0 14 3 5 #"wires"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 8 #"flatten*"
0 0 26 3 1 #" "
0 0 14 3 2 #"xs"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 14 3 6 #"filter"
0 0 26 3 2 #" ("
0 0 16 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 14 3 1 #"x"
0 0 26 3 2 #") "
0 0 14 3 1 #"x"
0 0 26 3 3 #") ("
0 0 14 3 5 #"foldl"
0 0 26 3 2 #" ("
0 0 16 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 14 3 3 #"acc"
0 0 26 3 1 #" "
0 0 14 3 4 #"memo"
0 0 26 3 3 #") ("
0 0 14 3 6 #"append"
0 0 26 3 1 #" "
0 0 14 3 3 #"acc"
0 0 26 3 1 #" "
0 0 14 3 4 #"memo"
0 0 26 3 3 #")) "
0 0 23 3 1 #"'"
0 0 26 3 3 #"() "
0 0 14 3 2 #"xs"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 2 #"  "
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 4 #"let*"
0 0 26 3 3 #" [("
0 0 14 3 5 #"wire1"
0 0 26 3 2 #" ("
0 0 14 3 19 #"segments-of-vectors"
0 0 26 3 2 #" ("
0 0 14 3 3 #"car"
0 0 26 3 1 #" "
0 0 14 3 5 #"wires"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 10 #"         ("
0 0 14 3 5 #"wire2"
0 0 26 3 2 #" ("
0 0 14 3 19 #"segments-of-vectors"
0 0 26 3 2 #" ("
0 0 14 3 4 #"cadr"
0 0 26 3 1 #" "
0 0 14 3 5 #"wires"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 9 #"         "
0 0 18 3 42 #"; Get the horizontal and vertical segments"
0 0 26 29 1 #"\n"
0 0 26 3 9 #"         "
0 0 18 3 6 #"; from"
0 0 18 3 1 #" "
0 0 18 3 4 #"both"
0 0 18 3 6 #" wires"
0 0 26 29 1 #"\n"
0 0 26 3 10 #"         ("
0 0 14 3 12 #"wire1-horizs"
0 0 26 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 26 3 1 #" "
0 0 14 3 5 #"wire1"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 10 #"         ("
0 0 14 3 11 #"wire1-verts"
0 0 26 3 2 #" ("
0 0 14 3 3 #"car"
0 0 26 3 1 #" "
0 0 14 3 5 #"wire1"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 10 #"         ("
0 0 14 3 12 #"wire2-horizs"
0 0 26 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 26 3 1 #" "
0 0 14 3 5 #"wire2"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 10 #"         ("
0 0 14 3 11 #"wire2-verts"
0 0 26 3 2 #" ("
0 0 14 3 3 #"car"
0 0 26 3 1 #" "
0 0 14 3 5 #"wire2"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 9 #"         "
0 0 18 3 23 #"; Get the intersections"
0 0 26 29 1 #"\n"
0 0 26 3 10 #"         ("
0 0 14 3 26 #"wire1-horizs-intersections"
0 0 26 29 1 #"\n"
0 0 26 3 11 #"          ("
0 0 14 3 8 #"flatten*"
0 0 26 3 2 #" ("
0 0 14 3 3 #"map"
0 0 26 3 2 #" ("
0 0 16 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 14 3 4 #"vert"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 28 #"                           ("
0 0 14 3 3 #"map"
0 0 26 3 2 #" ("
0 0 16 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 14 3 5 #"horiz"
0 0 26 3 3 #") ("
0 0 14 3 12 #"intersection"
0 0 26 3 1 #" "
0 0 14 3 5 #"horiz"
0 0 26 3 1 #" "
0 0 14 3 4 #"vert"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 32 #"                                "
0 0 14 3 12 #"wire1-horizs"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 25 #"                         "
0 0 14 3 11 #"wire2-verts"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 10 #"         ("
0 0 14 3 25 #"wire1-verts-intersections"
0 0 26 29 1 #"\n"
0 0 26 3 11 #"          ("
0 0 14 3 8 #"flatten*"
0 0 26 3 2 #" ("
0 0 14 3 3 #"map"
0 0 26 3 2 #" ("
0 0 16 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 14 3 4 #"vert"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 28 #"                           ("
0 0 14 3 3 #"map"
0 0 26 3 2 #" ("
0 0 16 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 14 3 5 #"horiz"
0 0 26 3 3 #") ("
0 0 14 3 12 #"intersection"
0 0 26 3 1 #" "
0 0 14 3 5 #"horiz"
0 0 26 3 1 #" "
0 0 14 3 4 #"vert"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 32 #"                                "
0 0 14 3 12 #"wire2-horizs"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 25 #"                         "
0 0 14 3 11 #"wire1-verts"
0 0 26 3 4 #")))]"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 14 3 6 #"append"
0 0 26 3 1 #" "
0 0 14 3 26 #"wire1-horizs-intersections"
0 0 26 29 1 #"\n"
0 0 26 3 12 #"            "
0 0 14 3 25 #"wire1-verts-intersections"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 2 #" ("
0 0 14 3 29 #"closest-intersection-distance"
0 0 26 3 1 #" "
0 0 14 3 5 #"wires"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 3 #"let"
0 0 26 3 3 #" [("
0 0 14 3 13 #"intersections"
0 0 26 3 2 #" ("
0 0 14 3 18 #"wire-intersections"
0 0 26 3 1 #" "
0 0 14 3 5 #"wires"
0 0 26 3 3 #"))]"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 14 3 5 #"foldl"
0 0 26 3 2 #" ("
0 0 16 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 14 3 12 #"intersection"
0 0 26 3 1 #" "
0 0 14 3 4 #"best"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 14 #"             ("
0 0 16 3 3 #"let"
0 0 26 3 3 #" [("
0 0 14 3 8 #"distance"
0 0 26 3 2 #" ("
0 0 14 3 1 #"+"
0 0 26 3 2 #" ("
0 0 14 3 3 #"abs"
0 0 26 3 2 #" ("
0 0 14 3 3 #"car"
0 0 26 3 1 #" "
0 0 14 3 12 #"intersection"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 33 #"                                ("
0 0 14 3 3 #"abs"
0 0 26 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 26 3 1 #" "
0 0 14 3 12 #"intersection"
0 0 26 3 5 #"))))]"
0 0 26 29 1 #"\n"
0 0 26 3 16 #"               ("
0 0 14 3 2 #"if"
0 0 26 3 2 #" ("
0 0 14 3 1 #"<"
0 0 26 3 1 #" "
0 0 14 3 8 #"distance"
0 0 26 3 1 #" "
0 0 14 3 4 #"best"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 19 #"                   "
0 0 14 3 8 #"distance"
0 0 26 29 1 #"\n"
0 0 26 3 19 #"                   "
0 0 14 3 4 #"best"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 11 #"           "
0 0 23 3 6 #"+inf.f"
0 0 26 29 1 #"\n"
0 0 26 3 11 #"           "
0 0 14 3 13 #"intersections"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 16 3 6 #"define"
0 0 26 3 1 #" "
0 0 14 3 5 #"part1"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 16 3 3 #"let"
0 0 26 3 3 #" [("
0 0 14 3 5 #"wires"
0 0 26 3 1 #" "
0 10         182 23 2 #"(\0"
2 #")\0"
35 7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 2 #"pa"
7 #"wxtext\0"
3 1 #"r"
7 #"wxtext\0"
3 2 #"se"
7 #"wxtext\0"
11 1 #" "
7 #"wxtext\0"
3 1 #"\""
7 #"wxtext\0"
11 155
(
 #"R995,U982,R941,U681,L40,D390,R223,U84,L549,U568,R693,D410,R779,U33,L"
 #"54,D18,L201,U616,R583,D502,R307,U46,L726,D355,L62,D973,R134,U619,L95"
 #"2,U669,L28,U729,L62"
) 7 #"wxtext\0"
11 156
(
 #"2,D821,R814,D149,L713,U380,R720,U438,L112,U587,R161,U789,R959,U254,R"
 #"51,U648,R259,U555,R863,U610,L33,D97,L825,D489,R836,D626,L849,D262,L3"
 #"80,U831,R650,U832,R3"
) 7 #"wxtext\0"
3 56 #"39,D538,L49,D808,L873,D33,L405,D655,R884,D630,R589,D291,"
7 #"wxtext\0"
11 100
(
 #"L675,D210,L211,D325,L934,D515,R896,U97,L639,U654,L301,U507,L642,D416"
 #",L325,U696,L3,U999,R88,D376,L187"
) 7 #"wxtext\0"
11 156
(
 #",U107,R394,U273,R117,D872,R162,D496,L599,D855,L961,U830,L156,U999,L8"
 #"96,D380,L476,U100,R848,U547,L266,D490,L87,D376,L428,U265,R645,U584,L"
 #"623,D658,L103,U946,R"
) 7 #"wxtext\0"
3 112
(
 #"162,U678,R532,D761,L141,D48,L487,D246,L85,D680,R859,D345,L499,D194,L"
 #"815,D742,R700,D141,L482,D442,L943,D110,L892,"
) 7 #"wxtext\0"
11 44 #"D486,L581,U733,L109,D807,L474,U866,R537,U217"
7 #"wxtext\0"
11 156
(
 #",R237,U915,R523,D394,L509,U333,R734,U511,R482,D921,R658,U860,R112,U5"
 #"27,L175,D619,R140,D402,L254,D956,L556,U447,L518,U60,L306,U88,R311,U6"
 #"54,L551,D38,R750,U83"
) 7 #"wxtext\0"
11 156
(
 #"5,L784,U648,L374,U211,L635,U429,R129,U849,R411,D135,L980,U40,R480,D9"
 #"1,R881,D292,R474,D956,L89,D640,L997,D397,L145,D126,R936,U135,L167,U2"
 #"89,R560,D745,L699,U9"
) 7 #"wxtext\0"
3 11 #"78,L459,D94"
7 #"wxtext\0"
11 145
(
 #"7,L782,U427,L784,D561,R985,D395,L358,D928,R697,U561,L432,U790,R112,D"
 #"474,R852,U862,R721,D337,L355,U598,L94,D951,L903,D175,R981,D444,L690,"
 #"D729,L537"
) 7 #"wxtext\0"
11 156
(
 #",D458,R883,U152,R125,D363,L90,U260,R410,D858,L825,U185,R502,D648,R79"
 #"3,D600,L589,U931,L772,D498,L871,U326,L587,D789,L934,D889,R621,U689,R"
 #"454,U475,L166,U85,R7"
) 7 #"wxtext\0"
3 67
#"49,D253,R234,D96,R367,D33,R831,D783,R577,U402,R482,D741,R737,D474,L"
7 #"wxtext\0"
3 3 #"666"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
11 156
(
 #"L996,D167,R633,D49,L319,D985,L504,U273,L330,U904,R741,U886,L719,D73,"
 #"L570,U982,R121,U878,R36,U1,R459,D368,R229,D219,R191,U731,R493,U529,R"
 #"53,D613,R690,U856,L4"
) 7 #"wxtext\0"
11 156
(
 #"70,D722,R464,D378,L187,U540,R990,U942,R574,D991,R29,D973,R905,D63,R7"
 #"45,D444,L546,U939,L848,U860,R877,D181,L392,D798,R564,D189,R14,U120,R"
 #"118,D350,R798,U462,R"
) 7 #"wxtext\0"
3 51 #"335,D497,R916,D722,R398,U91,L284,U660,R759,U676,L27"
7 #"wxtext\0"
11 105
(
 #"0,U69,L774,D850,R440,D669,L994,U187,R698,U864,R362,U523,L128,U89,R27"
 #"2,D40,L134,U571,L594,D737,L830,D956,L"
) 7 #"wxtext\0"
11 156
(
 #"213,D97,R833,U454,R319,U809,L506,D792,R746,U283,R858,D743,R107,U499,"
 #"R102,D71,R822,U9,L547,D915,L717,D783,L53,U871,R920,U284,R378,U312,R9"
 #"70,D316,R243,D512,R4"
) 7 #"wxtext\0"
3 107
(
 #"39,U530,R246,D824,R294,D726,R541,D250,R859,D134,R893,U631,L288,D151,"
 #"L796,D759,R17,D656,L562,U136,R861,U42,L"
) 7 #"wxtext\0"
11 49 #"66,U552,R240,D121,L966,U288,L810,D104,R332,U667,L"
7 #"wxtext\0"
11 156
(
 #"63,D463,R527,D27,R238,D401,L397,D888,R168,U808,L976,D462,R299,U385,L"
 #"183,U303,L121,U385,R260,U80,R420,D532,R725,U500,L376,U852,R98,D597,L"
 #"10,D441,L510,D592,L6"
) 7 #"wxtext\0"
11 156
(
 #"52,D230,L290,U41,R521,U726,R444,U440,L192,D255,R690,U141,R21,U942,L3"
 #"1,U894,L994,U472,L460,D357,R150,D721,R125,D929,R473,U707,R670,D118,R"
 #"255,U287,R290,D374,R"
) 7 #"wxtext\0"
3 7 #"223,U48"
7 #"wxtext\0"
11 149
(
 #"9,R533,U49,L833,D805,L549,D291,R288,D664,R639,U866,R205,D746,L832,U8"
 #"64,L774,U610,R186,D56,R517,U294,L935,D304,L581,U899,R749,U741,R569,U"
 #"282,R460,D925"
) 7 #"wxtext\0"
11 156
(
 #",L431,D168,R506,D949,L39,D472,R379,D125,R243,U335,L310,D762,R412,U42"
 #"6,L584,D981,L971,U575,L129,U885,L946,D221,L779,U902,R251,U75,L729,D9"
 #"56,L211,D130,R7,U664"
) 7 #"wxtext\0"
3 64
#",L915,D928,L613,U740,R572,U733,R277,U7,R953,D962,L635,U641,L199\""
7 #"wxtext\0"
3 1 #")"
0 0 26 3 2 #")]"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 14 3 29 #"closest-intersection-distance"
0 0 26 3 1 #" "
0 0 14 3 5 #"wires"
0 0 26 3 3 #")))"
0           0
